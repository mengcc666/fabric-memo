
{0} Download Fabric-samples

url=> github.com/hyperledger/fabric-samples
(eg.>git clone -b release-2.2 git@github.com:hyperledger/fabric-samples.git)


{1} Download Fabric

url=>	github.com/hyperledger/fabric
Specicy a release and "git clone".
( eg.>git clone -b release-2.2 git@github.com:hyperledger/fabric.git )
(Assume you've already set the ssh key))


{2}Open the bootstrap.sh in fabric and check the version.

>cd fabric/scripts
>vim bootstrap.sh
# if version not passed in, default to latest released version
VERSION=2.2.10
# if ca version not passed in, default to latest released version
CA_VERSION=1.5.5

VERSION=2.2.10		=> Fabric binary file version
CA_VERSION=1.5.5	=> CA binary file version

These two version is important in the next step.


{3}Download Binaries

Fabric binary file
url=>	github.com/hyperledger/fabric
This time don't clone, instead, click "Releases" on the right side on the screen.
Then, find the right version from Step.2 (eg. tag 2.2.10) and download ***-linux-***.tar.gz

CA binary file
url=>	github.com/hyperledger/fabric-ca
Similar operations.
(eg. CA 1.5.5)


{4}Extract .tar.gz file

>tar -xvf <Fabric binary filename>
>ls
bin config

>tar -xvf <CA binary filename>
>ls
>bin

Put 2 bin directories together.
Move "bin" and "config" to fabric-samples.
>mv bin <fabric-samples dir path>
>mv config <fabric-samples dir path>


{5} Download Docker and Docker-compose

Follow instructions in [ https://docs.docker.com/engine/install/ubuntu/ ]


{6} Pull docker images

>cd fabric/scripts
>vim bootstrap.sh
(Scroll down you'll find:)
DOCKER=true
SAMPLES=true
BINARIES=true

Only set DOCKER=true. SAMPLES=false BINARIES=false


Now you can run example application in fabric-samples.



To run network:
>cd fabric-samples/test-network
>./network.sh up

To run network and createChannel and set CA:
>cd fabric-samples/test-network
>./network.sh up createChannel -c <channel_name> -ca

To deploy chaincode:
>cd fabric-samples/test-network
>./network.sh deployCC -ccn <chaincode_name> -ccp <chaincode_path> -ccl <chaincode_language>

To run Java application(Gradle):
>cd fabric-samples/asset-transfer-basic/application-java
>./gradlew runApp
 